package com.webonise.sevletdemo.dao;

//import java.sql.Connection;
//import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.ArrayList;

import org.hibernate.HibernateException;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.cfg.AnnotationConfiguration;
//import org.hibernate.cfg.AnnotationConfiguration;

import com.webonise.serveletdemo.model.Employee;
//import com.mysql.*;

/**
 * @author webonise
 * main class to access the database 
 */
public class EmployeeImp implements EmployeeDoa
{
    
    ArrayList<Employee> employeeList;
    
    private static SessionFactory factory; 
	/* 	(non-Javadoc)
	 * 	@see com.webonise.sevletdemo.dao.EmployeeDoaInterface#addEmployeeRow(com.webonise.serveletdemo.model.Employee)
	 *	function to add a row in the database of the table employee
	 */
	@Override
	public void addEmployeeRow(Employee employee) throws SQLException 
	{ 

  	  System.out.println("in the addEmployeeRow");
		
		      try
		      {
		    	 AnnotationConfiguration anno= new AnnotationConfiguration().addResource("hibernate.cfg.xml").configure() .addAnnotatedClass(com.webonise.serveletdemo.model.Employee.class);
		         System.out.println("creting factory ");
		    	 factory = anno.buildSessionFactory();
		         
		      }catch (Throwable ex) { 
		         System.out.println("Failed to create sessionFactory object." + ex);
		         throw new ExceptionInInitializerError(ex); 
		      }
		     
		     
		      Session session = factory.openSession();
		      Transaction tx = null;

	    	  System.out.println("initilizing transaction");
		      try
		      {
		         tx = session.beginTransaction();

		    	 System.out.println("adding to employee");
		       //  Employee employee1 = new Employee("rana",11,23,"1989-11-5",4);
		       

		    	 System.out.println("saving to employee");
		         session.save(employee); 

		    	  System.out.println("saved in employee");
		         tx.commit();
		      }
		      catch (HibernateException e) 
		      {
		         if (tx!=null) tx.rollback();
		         e.printStackTrace(); 
		      }
		      finally 
		      {
		         session.close(); 
		      }
	}
	@Override
	public ArrayList<Employee> fetchDaoEmployeeData() throws SQLException {
		// TODO Auto-generated method stub
		return null;
	}
	
	/* (non-Javadoc)
	 * @see com.webonise.sevletdemo.dao.EmployeeDoaInterface#fetchDaoEmployeeData()
	 *	function to fetch the data from the database back to the service class
	 */
	//@Override
	/*public ArrayList<Employee> fetchDaoEmployeeData() throws SQLException 
	{
		employeeList= new ArrayList<Employee>();
		
		try {
			Class.forName (JDBC_DRIVER);
		} catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		Connection con = DriverManager.getConnection(url, user, password);   
		System.out.println("EMPLOYEE: dao : fetching data");
		
		Statement stat_emp = (Statement) con.createStatement();
		String query_emp="SELECT * FROM employee";
		System.out.println("EMPLOYEE: dao : fetching data");
		
		ResultSet rs_emp=(ResultSet) stat_emp.executeQuery(query_emp);
		
		System.out.println("---------------------------------------------------");
        System.out.println("ID\tNAME\tAGE\tDOB\t\tDEPATRMENT");
        System.out.println("---------------------------------------------------");
        int i=0;
        while(rs_emp.next())
        {
        	
        	Employee employee = new Employee();
           //Retrieve by column name
           int id  = rs_emp.getInt("id");
           String name= rs_emp.getString("fname");
           int age = rs_emp.getInt("age");
           String dob=rs_emp.getString("dob");
           int dept_id = rs_emp.getInt("dept_id");
           
           employee.setName(name);
           employee.setAge(age);
           employee.setDob(dob);
           employee.setDept_id(dept_id);
           employee.setId(id);
           
           //Display values
           System.out.println(employee.getId()+"\t"+employee.getName()+"\t"+employee.getAge()+"\t"+employee.getDob()+"\t"+employee.getDept_id());
          
           employeeList.add(employee);
          
        }
		return employeeList;	
		
	}
	*/
	

}
