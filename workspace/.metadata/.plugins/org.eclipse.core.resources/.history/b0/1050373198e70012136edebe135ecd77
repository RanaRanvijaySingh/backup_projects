package com.webonise.assignment.patternmatch;
import java.io.*;
import java.util.Stack;
public class PatternMatch 
{
    private static final char L_PAREN    = '(';
    private static final char R_PAREN    = ')';
    private static final char L_BRACE    = '{';
    private static final char R_BRACE    = '}';
    private static final char L_BRACKET  = '[';
    private static final char R_BRACKET  = ']';

    public static boolean isBalanced(String s) {
        Stack<Character> stack = new Stack<Character>();
        for (int i = 0; i < s.length(); i++) {

            if      (s.charAt(i) == '(')   stack.push(L_PAREN);

            else if (s.charAt(i) == '{')   stack.push(L_BRACE);

            else if (s.charAt(i) == '[') stack.push(L_BRACKET);

            else if (s.charAt(i) == ')') {
                if (stack.isEmpty())        return false;
                if (stack.pop() != '(') return false;
            }

            else if (s.charAt(i) == '}') {
                if (stack
                		.isEmpty())        return false;
                if (stack.pop() != '{') return false;
            }

            else if (s.charAt(i) == ']') {
                if (stack.isEmpty())        return false;
                if (stack.pop() != '[') return false;
            }

        }
        return stack.isEmpty();
    }


    public static void main(String[] args) 
    {
        String s = ("[{(())}]");
        System.out.println(isBalanced(s));
    }

}


